README for CustomerUI:1.	INSTALLING MONGODB AND NODEJSa.	Download and install MongoDB from the website https://www.mongodb.com/download-center?jmp=nav#community
b.	Create a folder on the C: drive (for Windows) or the Macintosh HD (for Mac) called “data” and within this folder, create another folder called “db”.
c.	Download and install NodeJS from https://nodejs.org/en/2.	FOLDER LAYOUT ON DESKTOPa.	Create a folder on the desktop called “CustomerUI” and inside this folder, place the file named “server.js”
b.	 Create another folder inside this folder called “public” and place the following files in this folder: index.html, takeout.html, reservations.html, submitOrder.html, end.html
c.	Inside this folder, create a folder called “controllers”.
d.	 Inside the “controllers” folder, place the following files into it: controller.js, takeoutController.js, reservationsController.js3.	INSTALLING EXPRESSa.	Open a command prompt window and navigate using “cd” to the “CustomerUI” folder on the desktop.
b.	Type the command “npm install express”.4.	RUNNING MONGODB AND CREATING DATABASESa.	Using the already open command prompt window, make sure the current directory is the “CustomerUI” folder and then type the command “node server”.
b.	Open a second, separate command prompt window and navigate to the location where the MongoDB folder is located.c.	Navigate inside this folder and then into the folder within in called “bin”.d.	Type the command “mongod” (on Windows) or “./mongod” (on Mac).e.	Open a new separate third command prompt window while keeping the previous window open and navigate again to the bin folder inside the MongoDB folder.f.	In the new command prompt window, type in the command “mongo” (on Windows) or “./mongo” on Mac.g.	In the new command prompt, type in “use menu”. Then copy the entire contents of the  “Menu Appetizers DB.json” file.h.	In the command prompt, type “insert([“ then paste what you just copied and type at the end “])” and press ENTER.i.	Repeat steps g and h above 3 more times except replacing “menu” in the phrase “use menu” with “menu2”, “menu3”, and “menu4” and using the json files “Menu Entrees DB.json”, “Menu Desserts DB.json”, and “Menu Drinks DB.json”.j.	Make sure to create the databases in the order shown.5.	INSTALLING BODY-PARSERa.	In the first command prompt window, press CTRL-C and then make sure the current directory is the “CustomerUI” folder. Type the command “npm install body-parser”.6.	RUNNING APPLICATIONa.	Go through each command prompt window and press CTRL-C in each.b.	Go back to the first window and after making sure the current directory is still 
the “CustomerUI” folder, type in “node server”.c.	In the second command prompt window, make sure the current directory is still the “bin” folder in the MongoDB folder. Type in “mongod” (on Windows) or “./mongod” (on Mac).d.	In the third command prompt window, make sure the current directory is still the “bin” folder in the MongoDB folder. Type in “mongo” (on Windows) or “./mongo” (on Mac).e.	Open any web browser and in the address field, type in “localhost:3000” and press ENTER.f.	The application and all of it’s content should be loaded up.7.	CHECKING DATABASE CONTENTa.	If you would like to see the databases that hold the queue of orders placed for takeout, the queue of reservations made, or the list of customers that placed a takeout order, pull up to the third command prompt window open (“mongo” or “./mongo” window).b.	If you would like to view the order queue, type in “use orderQueue”. Then type in “db.orderQueue.find().pretty()”. In order for this to show anything, orders must be first added from the takeout menu.c.	If you would like to view the customer queue, type in “use customer”. Then type in “db.customer.find().pretty()”. In order for this to show anything, orders must be first added from the takeout menu and the customer info must be added at least once.d.	If you would like to view the reservations queue, type in “use reservationsQueue”. Then type in “db.reservationsQueue.find().pretty()”. In order for this to show anything, at least one reservation must be made from the reservations page. e.	To clear out any database, type in, for example, “use customer”, and then type in “db.customer.deleteMany({})”. This will clear out the customer database.